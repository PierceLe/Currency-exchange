/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    // USE OPENCSV for query csv file
    implementation 'com.opencsv:opencsv:4.6'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

    // This dependency is used by the application.
//    implementation libs.guava

    // Lombok for reducing boilerplate code
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'CurrencyExchange.App'
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.

}

test {
    testLogging {
        showStandardStreams = true
    }
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        csv.required = false
    }
}

//Define new task run
run {
    standardInput = System.in
}